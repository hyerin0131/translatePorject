{"ast":null,"code":"import React from 'react';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers';\nimport rootSaga from '../saga/index';\nconst sagaMiddleWare = createSagaMiddleware();\n\nconst configureStore = context => {\n  const midlewares = [];\n  const enhance = false ? compose(applyMiddleware(...midlewares)) : composeWithDevTools(applyMiddleware(...midlewares));\n  const store = createStore(reducer, enhance, sagaMiddleWare);\n  return store;\n};\n\nexport default createWrapper(configureStore, {\n  debug: false\n});","map":{"version":3,"sources":["/Users/hyesong/Documents/react/react-bird/translatePorject/store/configureStore.js"],"names":["React","applyMiddleware","compose","createStore","createWrapper","composeWithDevTools","createSagaMiddleware","reducer","rootSaga","sagaMiddleWare","configureStore","context","midlewares","enhance","store","debug"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AAEA,SAAQC,aAAR,QAA4B,oBAA5B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAQC,oBAAR,MAAmC,YAAnC;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,eAArB;AAGA,MAAMC,cAAc,GAACH,oBAAoB,EAAzC;;AACA,MAAMI,cAAc,GAAGC,OAAD,IAAW;AAE7B,QAAMC,UAAU,GAAC,EAAjB;AACA,QAAMC,OAAO,GAAE,QAAqCX,OAAO,CAACD,eAAe,CAAC,GAAGW,UAAJ,CAAhB,CAA5C,GAA+EP,mBAAmB,CAACJ,eAAe,CAAC,GAAGW,UAAJ,CAAhB,CAAjH;AACA,QAAME,KAAK,GAAEX,WAAW,CAACI,OAAD,EAASM,OAAT,EAAiBJ,cAAjB,CAAxB;AACA,SAAOK,KAAP;AAGH,CARD;;AASA,eAAeV,aAAa,CAACM,cAAD,EAAgB;AAACK,EAAAA,KAAK;AAAN,CAAhB,CAA5B","sourcesContent":["import React from 'react';\nimport { applyMiddleware, compose, createStore } from 'redux';\n\nimport {createWrapper} from 'next-redux-wrapper';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport  createSagaMiddleware  from 'redux-saga';\nimport reducer from '../reducers';\nimport rootSaga from '../saga/index';\n\n\nconst sagaMiddleWare=createSagaMiddleware();\nconst configureStore =(context)=>{\n\n    const midlewares=[];\n    const enhance =process.env.NODE_ENV==='production'? compose(applyMiddleware(...midlewares)) : composeWithDevTools(applyMiddleware(...midlewares));\n    const store =createStore(reducer,enhance,sagaMiddleWare);\n    return store;\n\n\n}\nexport default createWrapper(configureStore,{debug:process.env.NODE_ENV==='devwlopment'});"]},"metadata":{},"sourceType":"module"}