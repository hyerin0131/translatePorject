{"ast":null,"code":"import { all, takeLatest, fork, put, delay, call } from 'redux-saga/effects';\nimport faker, { fake } from 'faker';\nimport { TRANSLATE_SIMPLE_REQUEST, TRANSLATE_SIMPLE_SUCCESS, TRANSLATE_SIMPLE_FAILURE, TRANSLATE_TEMPLATE_REQUEST, TRANSLATE_TEMPLATE_SUCCESS, TRANSLATE_TEMPLATE_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT_REQUEST, LOGOUT_SUCCESS, LOGOUT_FAILURE } from '../reducers/translate';\n\nfunction translateSimpleAPI(data) {\n  return axios.post('/simple', data, {\n    withCredentials: true\n  });\n}\n\nfunction* translateSimple(action) {\n  // const result = yield call(translateSimpleAPI, action.data,{ withCredentials: true });\n  yield delay(100);\n\n  try {\n    // console.log('done');\n    console.log(action.data);\n    yield put({\n      type: TRANSLATE_SIMPLE_SUCCESS,\n      Output: faker.lorem.paragraphs() + faker.lorem.paragraphs(),\n      Input: action.data,\n      id: faker.random.number()\n    });\n  } catch (error) {\n    // console.log('fails');\n    yield put({\n      type: TRANSLATE_SIMPLE_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchTranslateSimple() {\n  yield takeLatest(TRANSLATE_SIMPLE_REQUEST, translateSimple);\n}\n\nfunction translateTemplateAPI(data, value) {\n  return axios.post(`/simple/${value}`, data, {\n    withCredentials: true\n  });\n}\n\nfunction* translateTemplate(action) {\n  console.log('pass'); // const result = yield call(translateTemplateAPI, action.data,{ withCredentials: true });\n\n  console.log(action.value);\n  yield delay(100);\n\n  try {\n    console.log('done');\n    console.log(action.data);\n    yield put({\n      type: TRANSLATE_TEMPLATE_SUCCESS,\n      Output: faker.lorem.paragraphs() + faker.lorem.paragraphs(),\n      Input: action.data,\n      id: faker.random.number()\n    });\n  } catch (error) {\n    // console.log('fails');\n    yield put({\n      type: TRANSLATE_TEMPLATE_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchTranslateTemplate() {\n  yield takeLatest(TRANSLATE_TEMPLATE_REQUEST, translateTemplate);\n}\n\nfunction loginAPI(data) {\n  return axios.post('/login', data);\n}\n\nfunction* login(action) {\n  // const result = yield call(loginAPI, action.id,{ withCredentials: true });\n  yield delay(100);\n\n  try {\n    // console.log('done');\n    // console.log(action.id);\n    yield put({\n      type: LOGIN_SUCCESS,\n      data: action.data\n    });\n  } catch (error) {\n    console.log('fails');\n    yield put({\n      type: LOGIN_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchlogin() {\n  yield takeLatest(LOGIN_REQUEST, login);\n}\n\nfunction logoutAPI(data) {\n  return axios.post('/logout', data, {\n    withCredentials: true\n  });\n}\n\nfunction* logout(action) {\n  // const result = yield call(logoutAPI, action.id);\n  yield delay(100);\n\n  try {\n    console.log('done');\n    yield put({\n      type: LOGOUT_SUCCESS\n    });\n  } catch (error) {\n    console.log('fails');\n    yield put({\n      type: LOGOUT_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchlogout() {\n  yield takeLatest(LOGOUT_REQUEST, logout);\n}\n\nexport default function* translateSaga() {\n  console.log('watch Saga');\n  yield all([fork(watchTranslateSimple), fork(watchlogin), fork(watchlogout), fork(watchTranslateTemplate)]);\n}","map":{"version":3,"sources":["/Users/hyesong/Documents/react/react-bird/translatePorject/saga/translate.js"],"names":["all","takeLatest","fork","put","delay","call","faker","fake","TRANSLATE_SIMPLE_REQUEST","TRANSLATE_SIMPLE_SUCCESS","TRANSLATE_SIMPLE_FAILURE","TRANSLATE_TEMPLATE_REQUEST","TRANSLATE_TEMPLATE_SUCCESS","TRANSLATE_TEMPLATE_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","translateSimpleAPI","data","axios","post","withCredentials","translateSimple","action","console","log","type","Output","lorem","paragraphs","Input","id","random","number","error","response","watchTranslateSimple","translateTemplateAPI","value","translateTemplate","watchTranslateTemplate","loginAPI","login","watchlogin","logoutAPI","logout","watchlogout","translateSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,EAAqCC,KAArC,EAA4CC,IAA5C,QAAwD,oBAAxD;AACA,OAAOC,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SACEC,wBADF,EAEEC,wBAFF,EAGEC,wBAHF,EAIEC,0BAJF,EAKEC,0BALF,EAMEC,0BANF,EAOEC,aAPF,EAQEC,aARF,EASEC,aATF,EAUEC,cAVF,EAWEC,cAXF,EAYEC,cAZF,QAaO,uBAbP;;AAeA,SAASC,kBAAT,CAA4BC,IAA5B,EAAkC;AAChC,SAAOC,KAAK,CAACC,IAAN,CAAW,SAAX,EAAsBF,IAAtB,EAA4B;AAAEG,IAAAA,eAAe,EAAE;AAAnB,GAA5B,CAAP;AACD;;AAED,UAAUC,eAAV,CAA0BC,MAA1B,EAAkC;AAChC;AACA,QAAMtB,KAAK,CAAC,GAAD,CAAX;;AACA,MAAI;AACF;AACAuB,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACL,IAAnB;AACA,UAAMlB,GAAG,CAAC;AACR0B,MAAAA,IAAI,EAAEpB,wBADE;AAERqB,MAAAA,MAAM,EAAExB,KAAK,CAACyB,KAAN,CAAYC,UAAZ,KAA2B1B,KAAK,CAACyB,KAAN,CAAYC,UAAZ,EAF3B;AAGRC,MAAAA,KAAK,EAAEP,MAAM,CAACL,IAHN;AAIRa,MAAAA,EAAE,EAAE5B,KAAK,CAAC6B,MAAN,CAAaC,MAAb;AAJI,KAAD,CAAT;AAMD,GATD,CASE,OAAOC,KAAP,EAAc;AACd;AACA,UAAMlC,GAAG,CAAC;AACR0B,MAAAA,IAAI,EAAEnB,wBADE;AAER2B,MAAAA,KAAK,EAAEA,KAAK,CAACC,QAAN,CAAejB;AAFd,KAAD,CAAT;AAID;AACF;;AAED,UAAUkB,oBAAV,GAAiC;AAC/B,QAAMtC,UAAU,CAACO,wBAAD,EAA2BiB,eAA3B,CAAhB;AACD;;AACD,SAASe,oBAAT,CAA8BnB,IAA9B,EAAoCoB,KAApC,EAA2C;AACzC,SAAOnB,KAAK,CAACC,IAAN,CAAY,WAAUkB,KAAM,EAA5B,EAA+BpB,IAA/B,EAAqC;AAAEG,IAAAA,eAAe,EAAE;AAAnB,GAArC,CAAP;AACD;;AAED,UAAUkB,iBAAV,CAA4BhB,MAA5B,EAAoC;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EADkC,CAElC;;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACe,KAAnB;AACA,QAAMrC,KAAK,CAAC,GAAD,CAAX;;AACA,MAAI;AACFuB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACL,IAAnB;AACA,UAAMlB,GAAG,CAAC;AACR0B,MAAAA,IAAI,EAAEjB,0BADE;AAERkB,MAAAA,MAAM,EAAExB,KAAK,CAACyB,KAAN,CAAYC,UAAZ,KAA2B1B,KAAK,CAACyB,KAAN,CAAYC,UAAZ,EAF3B;AAGRC,MAAAA,KAAK,EAAEP,MAAM,CAACL,IAHN;AAIRa,MAAAA,EAAE,EAAE5B,KAAK,CAAC6B,MAAN,CAAaC,MAAb;AAJI,KAAD,CAAT;AAMD,GATD,CASE,OAAOC,KAAP,EAAc;AACd;AACA,UAAMlC,GAAG,CAAC;AACR0B,MAAAA,IAAI,EAAEhB,0BADE;AAERwB,MAAAA,KAAK,EAAEA,KAAK,CAACC,QAAN,CAAejB;AAFd,KAAD,CAAT;AAID;AACF;;AAED,UAAUsB,sBAAV,GAAmC;AACjC,QAAM1C,UAAU,CAACU,0BAAD,EAA6B+B,iBAA7B,CAAhB;AACD;;AACD,SAASE,QAAT,CAAkBvB,IAAlB,EAAwB;AACtB,SAAOC,KAAK,CAACC,IAAN,CAAW,QAAX,EAAqBF,IAArB,CAAP;AACD;;AAED,UAAUwB,KAAV,CAAgBnB,MAAhB,EAAwB;AACtB;AACA,QAAMtB,KAAK,CAAC,GAAD,CAAX;;AACA,MAAI;AACF;AACA;AACA,UAAMD,GAAG,CAAC;AACR0B,MAAAA,IAAI,EAAEd,aADE;AAERM,MAAAA,IAAI,EAAEK,MAAM,CAACL;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOgB,KAAP,EAAc;AACdV,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,UAAMzB,GAAG,CAAC;AACR0B,MAAAA,IAAI,EAAEb,aADE;AAERqB,MAAAA,KAAK,EAAEA,KAAK,CAACC,QAAN,CAAejB;AAFd,KAAD,CAAT;AAID;AACF;;AAED,UAAUyB,UAAV,GAAuB;AACrB,QAAM7C,UAAU,CAACa,aAAD,EAAgB+B,KAAhB,CAAhB;AACD;;AACD,SAASE,SAAT,CAAmB1B,IAAnB,EAAyB;AACvB,SAAOC,KAAK,CAACC,IAAN,CAAW,SAAX,EAAsBF,IAAtB,EAA4B;AAAEG,IAAAA,eAAe,EAAE;AAAnB,GAA5B,CAAP;AACD;;AAED,UAAUwB,MAAV,CAAiBtB,MAAjB,EAAyB;AACvB;AACA,QAAMtB,KAAK,CAAC,GAAD,CAAX;;AACA,MAAI;AACFuB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,UAAMzB,GAAG,CAAC;AACR0B,MAAAA,IAAI,EAAEX;AADE,KAAD,CAAT;AAGD,GALD,CAKE,OAAOmB,KAAP,EAAc;AACdV,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,UAAMzB,GAAG,CAAC;AACR0B,MAAAA,IAAI,EAAEV,cADE;AAERkB,MAAAA,KAAK,EAAEA,KAAK,CAACC,QAAN,CAAejB;AAFd,KAAD,CAAT;AAID;AACF;;AAED,UAAU4B,WAAV,GAAwB;AACtB,QAAMhD,UAAU,CAACgB,cAAD,EAAiB+B,MAAjB,CAAhB;AACD;;AAED,eAAe,UAAUE,aAAV,GAA0B;AACvCvB,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,QAAM5B,GAAG,CAAC,CACRE,IAAI,CAACqC,oBAAD,CADI,EAERrC,IAAI,CAAC4C,UAAD,CAFI,EAGR5C,IAAI,CAAC+C,WAAD,CAHI,EAIR/C,IAAI,CAACyC,sBAAD,CAJI,CAAD,CAAT;AAMD","sourcesContent":["import { all, takeLatest, fork, put, delay, call } from 'redux-saga/effects';\nimport faker, { fake } from 'faker';\nimport {\n  TRANSLATE_SIMPLE_REQUEST,\n  TRANSLATE_SIMPLE_SUCCESS,\n  TRANSLATE_SIMPLE_FAILURE,\n  TRANSLATE_TEMPLATE_REQUEST,\n  TRANSLATE_TEMPLATE_SUCCESS,\n  TRANSLATE_TEMPLATE_FAILURE,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  LOGOUT_REQUEST,\n  LOGOUT_SUCCESS,\n  LOGOUT_FAILURE,\n} from '../reducers/translate';\n\nfunction translateSimpleAPI(data) {\n  return axios.post('/simple', data, { withCredentials: true });\n}\n\nfunction* translateSimple(action) {\n  // const result = yield call(translateSimpleAPI, action.data,{ withCredentials: true });\n  yield delay(100);\n  try {\n    // console.log('done');\n    console.log(action.data);\n    yield put({\n      type: TRANSLATE_SIMPLE_SUCCESS,\n      Output: faker.lorem.paragraphs() + faker.lorem.paragraphs(),\n      Input: action.data,\n      id: faker.random.number(),\n    });\n  } catch (error) {\n    // console.log('fails');\n    yield put({\n      type: TRANSLATE_SIMPLE_FAILURE,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction* watchTranslateSimple() {\n  yield takeLatest(TRANSLATE_SIMPLE_REQUEST, translateSimple);\n}\nfunction translateTemplateAPI(data, value) {\n  return axios.post(`/simple/${value}`, data, { withCredentials: true });\n}\n\nfunction* translateTemplate(action) {\n  console.log('pass');\n  // const result = yield call(translateTemplateAPI, action.data,{ withCredentials: true });\n  console.log(action.value);\n  yield delay(100);\n  try {\n    console.log('done');\n    console.log(action.data);\n    yield put({\n      type: TRANSLATE_TEMPLATE_SUCCESS,\n      Output: faker.lorem.paragraphs() + faker.lorem.paragraphs(),\n      Input: action.data,\n      id: faker.random.number(),\n    });\n  } catch (error) {\n    // console.log('fails');\n    yield put({\n      type: TRANSLATE_TEMPLATE_FAILURE,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction* watchTranslateTemplate() {\n  yield takeLatest(TRANSLATE_TEMPLATE_REQUEST, translateTemplate);\n}\nfunction loginAPI(data) {\n  return axios.post('/login', data);\n}\n\nfunction* login(action) {\n  // const result = yield call(loginAPI, action.id,{ withCredentials: true });\n  yield delay(100);\n  try {\n    // console.log('done');\n    // console.log(action.id);\n    yield put({\n      type: LOGIN_SUCCESS,\n      data: action.data,\n    });\n  } catch (error) {\n    console.log('fails');\n    yield put({\n      type: LOGIN_FAILURE,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction* watchlogin() {\n  yield takeLatest(LOGIN_REQUEST, login);\n}\nfunction logoutAPI(data) {\n  return axios.post('/logout', data, { withCredentials: true });\n}\n\nfunction* logout(action) {\n  // const result = yield call(logoutAPI, action.id);\n  yield delay(100);\n  try {\n    console.log('done');\n    yield put({\n      type: LOGOUT_SUCCESS,\n    });\n  } catch (error) {\n    console.log('fails');\n    yield put({\n      type: LOGOUT_FAILURE,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction* watchlogout() {\n  yield takeLatest(LOGOUT_REQUEST, logout);\n}\n\nexport default function* translateSaga() {\n  console.log('watch Saga');\n  yield all([\n    fork(watchTranslateSimple),\n    fork(watchlogin),\n    fork(watchlogout),\n    fork(watchTranslateTemplate),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}