{"ast":null,"code":"import { all, takeLatest, fork, put, delay, call } from 'redux-saga/effects';\nimport faker from 'faker';\nimport { TRANSLATE_SIMPLE_REQUEST, TRANSLATE_SIMPLE_SUCCESS, TRANSLATE_SIMPLE_FAILURE } from '../reducers/translate';\n\nfunction translateSimpleAPI(data) {\n  return axios.post('/simple', data);\n}\n\nfunction* translateSimple(action) {\n  // const result = yield call(translateSimpleAPI, action.data);\n  yield delay(100);\n\n  try {\n    console.log(\"done\");\n    yield put({\n      type: TRANSLATE_SIMPLE_SUCCESS,\n      Output: fake.date.soon(),\n      Input: action.data,\n      id: faker.random.uuid()\n    });\n  } catch (error) {\n    console.log(\"fails\");\n    yield put({\n      type: TRANSLATE_SIMPLE_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchTranslateSimple() {\n  yield takeLatest(TRANSLATE_SIMPLE_REQUEST, translateSimple);\n}\n\nexport default function* translateSaga() {\n  console.log(\"watch Saga\");\n  yield all([fork(watchTranslateSimple)]);\n}","map":{"version":3,"sources":["/Users/hyesong/Documents/react/react-bird/translatePorject/saga/translate.js"],"names":["all","takeLatest","fork","put","delay","call","faker","TRANSLATE_SIMPLE_REQUEST","TRANSLATE_SIMPLE_SUCCESS","TRANSLATE_SIMPLE_FAILURE","translateSimpleAPI","data","axios","post","translateSimple","action","console","log","type","Output","fake","date","soon","Input","id","random","uuid","error","response","watchTranslateSimple","translateSaga"],"mappings":"AAEA,SAAQA,GAAR,EAAYC,UAAZ,EAAuBC,IAAvB,EAA6BC,GAA7B,EAAiCC,KAAjC,EAAuCC,IAAvC,QAAkD,oBAAlD;AACA,OAAOC,KAAP,MAAmB,OAAnB;AACA,SAAQC,wBAAR,EAAiCC,wBAAjC,EAA0DC,wBAA1D,QAAyF,uBAAzF;;AAEA,SAASC,kBAAT,CAA4BC,IAA5B,EAAiC;AAC7B,SAAOC,KAAK,CAACC,IAAN,CAAW,SAAX,EAAqBF,IAArB,CAAP;AACH;;AAED,UAAUG,eAAV,CAA0BC,MAA1B,EAAiC;AAE7B;AACA,QAAMX,KAAK,CAAC,GAAD,CAAX;;AACA,MAAI;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,UAAMd,GAAG,CAAC;AACNe,MAAAA,IAAI,EAACV,wBADC;AAENW,MAAAA,MAAM,EAACC,IAAI,CAACC,IAAL,CAAUC,IAAV,EAFD;AAGNC,MAAAA,KAAK,EAACR,MAAM,CAACJ,IAHP;AAINa,MAAAA,EAAE,EAAClB,KAAK,CAACmB,MAAN,CAAaC,IAAb;AAJG,KAAD,CAAT;AAQH,GAVD,CAUE,OAAOC,KAAP,EAAc;AACZX,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,UAAMd,GAAG,CAAC;AACNe,MAAAA,IAAI,EAACT,wBADC;AAENkB,MAAAA,KAAK,EAACA,KAAK,CAACC,QAAN,CAAejB;AAFf,KAAD,CAAT;AAMH;AAEJ;;AAID,UAAUkB,oBAAV,GAAgC;AAC5B,QAAM5B,UAAU,CAACM,wBAAD,EAA0BO,eAA1B,CAAhB;AACH;;AAGD,eAAgB,UAAUgB,aAAV,GAAyB;AACrCd,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,QAAMjB,GAAG,CAAC,CAACE,IAAI,CAAC2B,oBAAD,CAAL,CAAD,CAAT;AAEH","sourcesContent":["\n\nimport {all,takeLatest,fork, put,delay,call} from 'redux-saga/effects';\nimport faker  from 'faker';\nimport {TRANSLATE_SIMPLE_REQUEST,TRANSLATE_SIMPLE_SUCCESS,TRANSLATE_SIMPLE_FAILURE} from '../reducers/translate';\n\nfunction translateSimpleAPI(data){\n    return axios.post('/simple',data);\n}\n\nfunction* translateSimple(action){\n  \n    // const result = yield call(translateSimpleAPI, action.data);\n    yield delay(100);\n    try {\n        console.log(\"done\");\n        yield put({\n            type:TRANSLATE_SIMPLE_SUCCESS,\n            Output:fake.date.soon(),\n            Input:action.data,\n            id:faker.random.uuid()\n\n        });\n        \n    } catch (error) {\n        console.log(\"fails\");\n        yield put({\n            type:TRANSLATE_SIMPLE_FAILURE,\n            error:error.response.data,\n\n        });\n        \n    }\n\n}\n\n\n\nfunction* watchTranslateSimple(){\n    yield takeLatest(TRANSLATE_SIMPLE_REQUEST,translateSimple);\n}\n\n\nexport  default function* translateSaga(){\n    console.log(\"watch Saga\");\n    yield all([fork(watchTranslateSimple)])\n\n}"]},"metadata":{},"sourceType":"module"}