{"ast":null,"code":"import { all, takeLatest, fork, put, delay, call } from 'redux-saga/effects';\nimport faker, { fake } from 'faker';\nimport { TRANSLATE_SIMPLE_REQUEST, TRANSLATE_SIMPLE_SUCCESS, TRANSLATE_SIMPLE_FAILURE } from '../reducers/translate';\n\nfunction translateSimpleAPI(data) {\n  return axios.post('/simple', data);\n}\n\nfunction* translateSimple(action) {\n  // const result = yield call(translateSimpleAPI, action.data);\n  yield delay(100);\n\n  try {\n    console.log('done');\n    console.log(action.data);\n    yield put({\n      type: TRANSLATE_SIMPLE_SUCCESS,\n      Output: faker.lorem.paragraphs() + faker.lorem.paragraphs(),\n      Input: action.data,\n      id: faker.random.number()\n    });\n  } catch (error) {\n    console.log('fails');\n    yield put({\n      type: TRANSLATE_SIMPLE_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchTranslateSimple() {\n  yield takeLatest(TRANSLATE_SIMPLE_REQUEST, translateSimple);\n}\n\nexport default function* translateSaga() {\n  console.log('watch Saga');\n  yield all([fork(watchTranslateSimple)]);\n}","map":{"version":3,"sources":["/Users/hyesong/Documents/react/react-bird/translatePorject/saga/translate.js"],"names":["all","takeLatest","fork","put","delay","call","faker","fake","TRANSLATE_SIMPLE_REQUEST","TRANSLATE_SIMPLE_SUCCESS","TRANSLATE_SIMPLE_FAILURE","translateSimpleAPI","data","axios","post","translateSimple","action","console","log","type","Output","lorem","paragraphs","Input","id","random","number","error","response","watchTranslateSimple","translateSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,EAAqCC,KAArC,EAA4CC,IAA5C,QAAwD,oBAAxD;AACA,OAAOC,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SACEC,wBADF,EAEEC,wBAFF,EAGEC,wBAHF,QAIO,uBAJP;;AAMA,SAASC,kBAAT,CAA4BC,IAA5B,EAAkC;AAChC,SAAOC,KAAK,CAACC,IAAN,CAAW,SAAX,EAAsBF,IAAtB,CAAP;AACD;;AAED,UAAUG,eAAV,CAA0BC,MAA1B,EAAkC;AAChC;AACA,QAAMZ,KAAK,CAAC,GAAD,CAAX;;AACA,MAAI;AACFa,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACJ,IAAnB;AACA,UAAMT,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEV,wBADE;AAERW,MAAAA,MAAM,EAAEd,KAAK,CAACe,KAAN,CAAYC,UAAZ,KAA2BhB,KAAK,CAACe,KAAN,CAAYC,UAAZ,EAF3B;AAGRC,MAAAA,KAAK,EAAEP,MAAM,CAACJ,IAHN;AAIRY,MAAAA,EAAE,EAAElB,KAAK,CAACmB,MAAN,CAAaC,MAAb;AAJI,KAAD,CAAT;AAMD,GATD,CASE,OAAOC,KAAP,EAAc;AACdV,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,UAAMf,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAET,wBADE;AAERiB,MAAAA,KAAK,EAAEA,KAAK,CAACC,QAAN,CAAehB;AAFd,KAAD,CAAT;AAID;AACF;;AAED,UAAUiB,oBAAV,GAAiC;AAC/B,QAAM5B,UAAU,CAACO,wBAAD,EAA2BO,eAA3B,CAAhB;AACD;;AAED,eAAe,UAAUe,aAAV,GAA0B;AACvCb,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,QAAMlB,GAAG,CAAC,CAACE,IAAI,CAAC2B,oBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, takeLatest, fork, put, delay, call } from 'redux-saga/effects';\nimport faker, { fake } from 'faker';\nimport {\n  TRANSLATE_SIMPLE_REQUEST,\n  TRANSLATE_SIMPLE_SUCCESS,\n  TRANSLATE_SIMPLE_FAILURE,\n} from '../reducers/translate';\n\nfunction translateSimpleAPI(data) {\n  return axios.post('/simple', data);\n}\n\nfunction* translateSimple(action) {\n  // const result = yield call(translateSimpleAPI, action.data);\n  yield delay(100);\n  try {\n    console.log('done');\n    console.log(action.data);\n    yield put({\n      type: TRANSLATE_SIMPLE_SUCCESS,\n      Output: faker.lorem.paragraphs() + faker.lorem.paragraphs(),\n      Input: action.data,\n      id: faker.random.number(),\n    });\n  } catch (error) {\n    console.log('fails');\n    yield put({\n      type: TRANSLATE_SIMPLE_FAILURE,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction* watchTranslateSimple() {\n  yield takeLatest(TRANSLATE_SIMPLE_REQUEST, translateSimple);\n}\n\nexport default function* translateSaga() {\n  console.log('watch Saga');\n  yield all([fork(watchTranslateSimple)]);\n}\n"]},"metadata":{},"sourceType":"module"}